# -*- coding: utf-8 -*-
"""kerg.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1H0Kqhft3p3TUPDMzU5W99arEXcDQs_6y

# **Ná í niðurstöður Bundestag-kosninga 2021**
"""

# FORRIT SEM LES SKRÁNA kerg2.csv SEM Á UPPRUNA SINN Á SÍÐUNNI:
#   https://www.bundeswahlleiter.de/bundestagswahlen/2021/ergebnisse/opendata/csv/
# OG SKRIFAR GÖGNIN Í FIMM SÍÐUR Í EXCEL-SKJALIÐ þýskaland-2021.xlsx.
# SJÖTTA SÍÐAN SEM SKRIFUÐ ER Í EXCELSKJALIÐ ER FJÖLDI SÆTA Í HVERJU FYLKI SKV.
# https://www.bundeswahlleiter.de/mitteilungen/bundestagswahlen/2021/20210909_btw21
# -sitzkontingente.html
#

#@title IMPORT OG FRUMSTILLING
#from google.colab import drive
#drive.mount('/content/drive')
# kerg = kreiseergebnissenxfoption

import os, numpy as np, matplotlib.pyplot as plt, pandas as pd
#from google.colab import data_table
#data_table.disable_dataframe_formatter()
#from matplotlib import gridspec
pd.set_option('display.max_columns', None)
def display(x): print(x)

plt.rc('axes', axisbelow=True)
plt.rc('savefig',bbox='tight')  # laga galla á savefig
#dir = '/content/drive/Othercomputers/My MacBook Air/drive/allt-thyskaland'
#os.chdir(dir)
np.set_printoptions(suppress=True, floatmode="fixed", precision=3)

#@title LESA GÖGN OG SORTERA
os.listdir()
file = "kerg2.csv"
df = pd.read_csv(file, sep=';', decimal=',', skiprows=9)
summary = df[df.Gebietsname=="Bundesgebiet"].copy()
summary.loc[:,"Prozent"] /= 100
df

#@title KJÖRSÓKN OG GILD ATKVÆÐI
def get_country_total(summ, Stimme):
  sel = summ.Gruppenart == 'System-Gruppe'
  totals = summ.loc[sel].copy()
  totals = totals[['Gruppenname', 'Gruppenreihenfolge', 'Anzahl', 'Prozent']]
  totals = totals.set_index(['Gruppenname'], drop=True).drop("Übrige")
  totals.index.name = None  
  vote_string = "Erststimme" if Stimme==1 else "Zweitstimme"
  totals.index = [vote_string + " " + i for i in totals.index]
  return totals

# summary
#display(summary)
summ0 = summary[summary.Stimme.isnull()].copy()
summ0.loc[summ0.Prozent.isnull(), "Prozent"] = 1
summ1 = summary[summary.Stimme==1]
summ2 = summary[summary.Stimme==2]

print(f'Wahltag: {summ0.loc[1, "Wahltag"]}\n\n')
country = summ0[["Anzahl", "Prozent"]]
country.index = ["Wählerverzeichniz", "Totalstimme"]
country = country.append(get_country_total(summ1, 1))
country = country.append(get_country_total(summ2, 2))

disp = country.style.format({"Anzahl": "{:,.0f}", "Prozent": "{:.1%}"})\
  .set_caption("Ganz Deutschland")\
  .set_table_styles([{'selector':'.row_heading', 'props':[('text-align','left')]}])

display(disp)

#@title ALLT ÞÝSKALAND, TÖLUR FYRIR FLOKKA MEÐ > 1% "ZWEITSTIMME"
def combine_small_parties(summ, parties=None):
  #votes.sort_values(by=['Gruppenart', 'Anzahl'], ascending=False, inplace=True)
  #votes.sort_values(by=['Gruppenart', 'Anzahl'], ascending=False, inplace=True)
  #display(votes)
  sel = [ga=='Partei' or ga.startswith('Einzel') for ga in summ.Gruppenart]
  votes = summ.loc[sel].copy()
  rename = {'Gruppenname':'Partei', 'Gruppenreihenfolge':'Parteinummer'}
  votes.rename(columns=rename, inplace=True)
  votes = votes[["Partei", "Parteinummer", "Anzahl", "Prozent"]]
  if parties is None:
    votes = votes.groupby([v.Partei if (v.Prozent >= 0.01 or v.Partei=="SSW")
        else 'Übrige parteien'
        for (_,v) in votes.iterrows()]).sum()
  else:
    votes = votes.groupby([v.Partei if v.Partei in parties else 'Übrige parteien'
            for (_,v) in votes.iterrows()]).sum()
  return votes

votes2 = combine_small_parties(summ2)
parties = list(votes2.index)
votes1 = combine_small_parties(summ1, parties)
votes1.columns = ['Parteinummer', 'Erststimme', 'ES-Prozent']
votes2.drop(columns='Parteinummer', inplace=True)
votes2.columns = ['Zweitstimme', 'ZS-Prozent']
votes_all = pd.concat([votes1, votes2], axis=1)
votes_all.loc['Total'] = votes_all.sum(numeric_only = True)
votes_all = votes_all.astype({'Parteinummer':int}).sort_values('Parteinummer')
votes_all.loc['Total', 'Parteinummer'] = ''
display(votes_all.style \
  .format({ \
    "Erststimme": "{:,.0f}", "ES-Prozent": "{:.1%}",
    "Zweitstimme": "{:,.0f}", "ZS-Prozent": "{:.1%}"},)\
  .set_caption("Ganz Deutschland, Parteien mit mehr als 1% Zweitstimme")\
  .set_table_styles([{
    'selector':'.row_heading', 'props':[('text-align','left')]
  }]))

#@title NÁ Í UPPFLETTITÖFLUR FYRIR FLOKKA, LÖND, OG KJÖRDÆMI
parties = list(range(1,8))

def get_parties(select_parties):
  party = select_parties
  partynumber = dict((v,k) for (k,v) in enumerate(party, 1))
  return party, partynumber

def get_länder(df):
  rename = {'Gebietsnummer':'Landsnummer', 'Gebietsname':'Land'}
  sel = df.Gebietsart == 'Land'
  df = df.loc[sel, rename.keys()] \
      .rename(columns=rename) \
      .drop_duplicates() \
      .set_index(['Landsnummer'], drop=True) \
      .sort_index()
  return df
  #.to_dict()['Land']

def get_const(df):
  rename = {'Gebietsnummer': "Wahlkreisnummer", 
            'Gebietsname': "Wahlkreis",
            'UegGebietsnummer': "Landsnummer"}
  sel = df.Gebietsart == 'Wahlkreis'
  df = df.loc[sel, rename.keys()] \
       .rename(columns=rename) \
       .drop_duplicates() \
       .astype({'Landsnummer':int}) \
       .set_index(['Wahlkreisnummer'], drop=True) \
       .sort_index()
  return df#.to_dict()['Wahlkreis']

select_parties = ["CDU", "SPD", "AfD", "FDP", "DIE LINKE", "GRÜNE", "CSU", "SSW"]
party,partynumber = get_parties(select_parties)
land = get_länder(df)
const = get_const(df)

print(party)
print(land)
print("Fjöldi kjördæma:", len(const))

#@title NÁ Í ATKVÆÐI
cols = ['Gebietsart', 'Gebietsnummer', 'UegGebietsnummer', 'Gruppenname',
        'Stimme', 'Anzahl', 'Prozent']
cols1 = ['Gebietsnummer','UegGebietsnummer','Parteinummer','Anzahl','Prozent']
cols2 = ['Gebietsnummer','Parteinummer','Anzahl','Prozent']
rename1 = {'Gebietsnummer':'Wahlkreisnummer', 'UegGebietsnummer':'Landsnummer'}
rename2 = {'Gebietsnummer':'Landsnummer'}
setint = {'Landsnummer':int, 'Anzahl':int}
votes = df[cols].rename(columns={'Gruppenname': 'Partei'})
votes["Parteinummer"] = [partynumber[p] if p in partynumber else 0 for p in votes.Partei]
votes[['Anzahl','Prozent']] = votes[['Anzahl','Prozent']].fillna(0)
erst = [g=="Wahlkreis" and s==1 and p in select_parties
        for (g,s,p) in zip(votes.Gebietsart, votes.Stimme, votes.Partei)]
zweit = [g=="Land" and s==2 and p in select_parties
         for (g,s,p) in zip(votes.Gebietsart, votes.Stimme, votes.Partei)]
votes1 = votes.loc[erst, cols1].rename(columns = rename1).astype(setint)
votes2 = votes.loc[zweit, cols2].rename(columns = rename2).astype(setint)
votes1.sort_values(['Wahlkreisnummer', 'Parteinummer'], inplace = True)
votes2.sort_values(['Landsnummer', 'Parteinummer'], inplace = True)
votes1.reset_index(inplace=True, drop=True)
votes2.reset_index(inplace=True, drop=True)
display(votes1.iloc[:8])
display(votes2.loc[:8])

votes2[votes2.Landsnummer==9]

#@title NÁ Í SÆTI FYLKJA
sæti_fylkja = pd.read_excel('sæti-fylkja.xlsx')
land2sæti = dict(zip(sæti_fylkja.Land, sæti_fylkja.Sæti))
land['Sitze'] = [land2sæti[l] for l in land.Land]

#@title SKRIFA Í EXCEL
writer = pd.ExcelWriter('þýskaland-2021.xlsx')
land.to_excel(writer, sheet_name='Land')
party = [p.replace("DIE LINKE", "Linke").replace("GRÜNE", "Grüne") for p in party]
partyxl = pd.DataFrame(enumerate(party, 1))
partyxl.to_excel(writer, sheet_name='Partei', index=False)
const.to_excel(writer, sheet_name='Kreis')
votes1.to_excel(writer, sheet_name='Erststimme', index=False)
votes2.to_excel(writer, sheet_name='Zweitstimme', index=False)
writer.save()
#from google.colab import files
#files.download('þýskaland-2021.
